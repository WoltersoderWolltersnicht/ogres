#!/bin/sh
set -o errexit -o nounset

# Creates or updates an existing release by the version given. This is
# only used for the client application. Do not replace a release that
# has already been published once before unless you can ensure that
# there are no backwards-incompatible changes.
#
# Example
# $ sh bin/release v0.1.10-alpha user@192.0.2.235

src="$PWD"
tmp=$(mktemp -d -t ogres.app)
vrs=$1
dst=$2
url="wss://ogres.app/ws"

npx shadow-cljs release app --config-merge "{:closure-defines {ogres.app.const/VERSION \"$vrs\" ogres.app.const/PATH \"/release/$vrs\" ogres.app.const/SOCKET-URL \"$url\"}}"
npx esbuild src/main/ogres/app/resource/root.css --outfile=web/release/ogres.app.css --loader:.svg=dataurl --bundle --minify

git clone --single-branch --branch gh-pages git@github.com:samcf/ogres.git "$tmp"
mkdir -p "$tmp"/release/"$vrs"
cp -r web/release/. "$tmp"/release/"$vrs"

cd "$tmp"/release/"$vrs"
rm -rf cljs-runtime manifest.edn
git add --all
git commit -m "Release candidate version $vrs."
git push origin gh-pages

cd "$tmp"
rsync -rv . "$dst":/srv/ogres.app/ --exclude=.git

cd "$src"
rm -rf "$tmp"
